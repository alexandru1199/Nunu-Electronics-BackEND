{
  "version": 3,
  "sources": ["src/components/template/template.service.ts", "src/components/template/template.component.ts", "src/components/template/template.component.html", "src/constants.ts", "src/components/produse/produse.service.ts", "src/components/homepage/homepage.component.ts", "src/components/homepage/homepage.component.html", "src/components/navbar/navbar.component.ts", "src/components/navbar/navbar.component.html", "src/app/app.component.ts", "src/app/app.component.html", "src/components/error-page/error-page.component.ts", "src/components/error-page/error-page.component.html", "src/components/contact-page/contact-page.component.ts", "src/components/contact-page/contact-page.component.html", "src/components/cart/cart.service.ts", "src/components/produse/produse.component.ts", "src/components/produse/produse.component.html", "src/components/cart/cart.component.ts", "src/components/cart/cart.component.html", "src/components/thank-you/thank-you.component.ts", "src/components/thank-you/thank-you.component.html", "src/app/app.routes.ts", "src/app/app.config.ts", "src/app/app.config.server.ts", "src/main.server.ts"],
  "sourcesContent": ["import { HttpClient } from '@angular/common/http';\r\nimport { Template } from '../../models/Template';\r\nimport { Injectable } from '@angular/core';\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\nexport class TemplateService {\r\n    constructor(private http: HttpClient) { }\r\n    templateUrl = 'https://catfact.ninja/fact';\r\n    getTemplates(){\r\n        return this.http.get<Template[]>(this.templateUrl);\r\n    }\r\n}", "import { Component, OnInit } from '@angular/core';\r\nimport { TemplateService } from './template.service';\r\nimport { Template } from '../../models/Template';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-template',\r\n  templateUrl: './template.component.html',\r\n  styleUrls: ['./template.component.scss'],\r\n  standalone: true,\r\n  imports: [CommonModule]\r\n})\r\nexport class TemplateComponent implements OnInit {\r\n  templates: Template[] = []; // Still using an array for consistency\r\n\r\n  constructor(private templateService: TemplateService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.templateService.getTemplates().subscribe(\r\n      (data: any) => {\r\n        if (Array.isArray(data)) {\r\n          this.templates.push(...data);  // If it's already an array\r\n        }\r\n        // asta e doar de test, api-urile care o sa le facem o sa trimitem arrayuri\r\n        else if (data && typeof data === 'object' && !Array.isArray(data)) {\r\n          this.templates.push(data);  // Add the single object to the array\r\n        }  else {\r\n          console.error('Unexpected data format:', data);\r\n        }\r\n      },\r\n      (error) => {\r\n        console.error('Error fetching templates:', error);\r\n      }\r\n    );\r\n  }\r\n}\r\n", "<body>\r\n<div *ngFor=\"let template of templates\">\r\n    <h3>{{ template.fact }}</h3>\r\n  </div>\r\n</body>", "export const APP_CONSTANTS = {\r\n    BACKEND_BASE_URL_DEV: 'http://localhost:5142',\r\n    BACKEND_BASE_URL_PROD:'https://nunuelectronics-ehakdyc9e9b3h0ag.westeurope-01.azurewebsites.net',\r\n    APP_TITLE: 'Nunu Electronics',\r\n    DEFAULT_LANGUAGE: 'en',\r\n    ITEMS_PER_PAGE: 10,\r\n  };", "import { HttpClient } from '@angular/common/http';\r\nimport { Template } from '../../models/Template';\r\nimport { Injectable } from '@angular/core';\r\nimport { APP_CONSTANTS } from '../../constants';\r\nimport { Product } from '../../models/Product';\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\nexport class ProduseService {\r\n    constructor(private http: HttpClient) { }\r\n    produseUrl = APP_CONSTANTS.BACKEND_BASE_URL_PROD+\"/Product\";\r\n    getServices(){\r\n        return this.http.get<Product[]>(this.produseUrl);\r\n    }\r\n}\r\n\r\n", "import { Component, OnInit } from '@angular/core';\r\nimport { Product } from '../../models/Product';\r\nimport { ProduseService } from '../produse/produse.service';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterLink, RouterOutlet } from '@angular/router';\r\n@Component({\r\n  selector: 'app-homepage',\r\n  standalone: true,\r\n  imports: [CommonModule,RouterOutlet,RouterLink],\r\n  templateUrl: './homepage.component.html',\r\n  styleUrl: './homepage.component.scss'\r\n})\r\nexport class HomepageComponent  implements OnInit{\r\nProducts: Product[] = []\r\n  constructor(private produseService: ProduseService) { }\r\n  ngOnInit(): void {\r\n    this.produseService.getServices().subscribe(\r\n      (data: Product[]) => { \r\n        if (data.length > 2) {\r\n          this.Products = data.sort(() => 0.5 - Math.random()).slice(0, 2);\r\n        } else {\r\n          this.Products = data; // Dacă sunt mai puțin de 2 produse, le ia pe toate\r\n        }\r\n      },\r\n      (error) => {\r\n        console.error('Error fetching products:', error);\r\n      }\r\n    );\r\n  }\r\n  \r\n}\r\n\r\n", "\r\n<header>\r\n  <h1>Nunu Electronics</h1>\r\n  <p>Empowering Technology, Guided by Faith</p>\r\n</header>\r\n\r\n<section class=\"hero\">\r\n  <h2>Innovating Today, Empowering Tomorrow</h2>\r\n  <p>Discover cutting-edge electronics designed to simplify your life and guided by higher values.</p>\r\n  <a class=\"btn\" routerLink=\"/products\">Products</a>\r\n\r\n  <a href=\"#about\" class=\"btn\">Learn More</a>\r\n</section>\r\n\r\n<section class=\"products-section\" id=\"products\">\r\n  <h3>Our Best Sellers</h3>\r\n  <div class=\"products\">\r\n    <div class=\"product\" *ngFor=\"let product of Products\">\r\n      <img [src]=\"product.image\" [alt]=\"product.productName\">\r\n      <h4>{{ product.productName }}</h4>\r\n      <p>{{product.description}}</p> <!-- Descriere fixă -->\r\n      <a href=\"#\" class=\"btn\">Buy Now</a>\r\n      \r\n    </div>\r\n  </div>\r\n</section>\r\n\r\n\r\n<section class=\"about-section\" id=\"about\">\r\n  <h3>Why Nunu Electronics?</h3>\r\n  <p>We blend innovation with purpose, creating products inspired by integrity and faith.</p>\r\n</section>\r\n\r\n<footer>\r\n  <p>&copy; 2024 Nunu Electronics. All rights reserved.</p>\r\n  <p><a href=\"mailto:support@nunu.com\">Contact Us</a> | Phone: +1 800 555 6789</p>\r\n</footer>\r\n", "import { Component } from '@angular/core';\r\nimport { RouterLink, RouterOutlet } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  standalone: true,\r\n  imports: [RouterOutlet,RouterLink],\r\n  templateUrl: './navbar.component.html',\r\n  styleUrl: './navbar.component.scss'\r\n})\r\nexport class NavbarComponent {\r\n\r\n}\r\n", "<nav class=\"navbar\">\r\n  <div class=\"container\">\r\n    <ul class=\"nav-links\">\r\n      <li><a routerLink=\"/\">Home</a></li>\r\n      <li><a routerLink=\"/contact\">Contact</a></li>\r\n      <li><a routerLink=\"/products\">Products</a></li>\r\n    </ul>\r\n\r\n    <!-- Coșul de cumpărături la dreapta cu text -->\r\n    <div class=\"cart-container\">\r\n      <a routerLink=\"/cart\">\r\n      <span class=\"cart-text\">Cart</span>\r\n        <img src=\"assets/cart-icon.png\" alt=\"Cart\" class=\"cart-icon\">\r\n      </a>\r\n    </div>\r\n  </div>\r\n</nav>\r\n", "import { Component } from '@angular/core';\r\nimport { RouterLink, RouterLinkActive, RouterOutlet } from '@angular/router';\r\nimport { TemplateComponent } from '../components/template/template.component';\r\nimport { HomepageComponent } from '../components/homepage/homepage.component';\r\nimport { NavbarComponent } from \"../components/navbar/navbar.component\";\r\n@Component({\r\n  selector: 'app-root',\r\n  standalone: true,\r\n  imports: [ TemplateComponent, HomepageComponent, NavbarComponent,RouterOutlet, RouterLink, RouterLinkActive],\r\n  templateUrl: './app.component.html',\r\n  styleUrl: './app.component.scss'\r\n})\r\nexport class AppComponent {\r\n  title = 'Nunu-Electronics';\r\n}", "<div class=\"margine\">\r\n\r\n<app-navbar></app-navbar>\r\n<router-outlet></router-outlet>\r\n</div>\r\n\r\n", "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-error-page',\r\n  standalone: true,\r\n  imports: [],\r\n  templateUrl: './error-page.component.html',\r\n  styleUrl: './error-page.component.scss'\r\n})\r\nexport class ErrorPageComponent {\r\n\r\n}\r\n", "<!DOCTYPE html>\r\n<html lang=\"en\" ng-app=\"\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n  <title>Centered Image with Message</title>\r\n</head>\r\n<body>\r\n    <audio id=\"pageSound\" src=\"your-sound-file.mp3\" autoplay></audio>\r\n  <div class=\"container\">\r\n    <img src=\"https://cdna.artstation.com/p/assets/images/images/014/896/868/large/x-train-nunu-bot.jpg?1546153109\" alt=\"Centered Image\">\r\n    <div class=\"message\">Eroare 404. Doamne Ajuta.</div>\r\n  </div>\r\n</body>\r\n</html>\r\n", "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-contact-page',\r\n  standalone: true,\r\n  imports: [],\r\n  templateUrl: './contact-page.component.html',\r\n  styleUrl: './contact-page.component.scss'\r\n})\r\nexport class ContactPageComponent {\r\n\r\n}\r\n", "<div class=\"container\">\r\n    \r\n    <form action=\"action_page.php\">\r\n  \r\n      <label for=\"fname\">First Name</label>\r\n      <input type=\"text\" id=\"fname\" name=\"firstname\" placeholder=\"Your name..\">\r\n  \r\n      <label for=\"lname\">Last Name</label>\r\n      <input type=\"text\" id=\"lname\" name=\"lastname\" placeholder=\"Your last name..\">\r\n  \r\n      <label for=\"country\">Country</label>\r\n      <select id=\"country\" name=\"country\">\r\n        <option value=\"australia\">Australia</option>\r\n        <option value=\"canada\">Canada</option>\r\n        <option value=\"usa\">USA</option>\r\n        <option value=\"romania\">Romania</option>\r\n      </select>\r\n      \r\n      <label for=\"problem\">Problem</label>\r\n      <select id=\"problem\" name=\"problem\">\r\n        <option value=\"lag\">Lag</option>\r\n        <option value=\"bugging\">Bug</option>\r\n        <option value=\"package\">Package not arriving</option>\r\n        <option value=\"service\">Poor service</option>\r\n        <option value=\"reassurence\">Reassurance</option>\r\n        <option value=\"payment\">Payment</option>\r\n        <option value=\"weird\">Something else</option>\r\n      </select>\r\n\r\n      <label for=\"subject\">Subject</label>\r\n      <textarea id=\"subject\" name=\"subject\" placeholder=\"Write something..\" style=\"height:200px\"></textarea>\r\n  \r\n      <input type=\"submit\" value=\"Submit\">\r\n  \r\n    </form>\r\n    \r\n  </div> \r\n  \r\n  ", "import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CartService {\r\n  private cartItems: any[] = [];\r\n\r\n  constructor() {\r\n    // Verificăm dacă suntem în browser înainte de a accesa localStorage\r\n    if (typeof window !== 'undefined' && window.localStorage) {\r\n      const savedCart = localStorage.getItem('cartItems');\r\n      if (savedCart) {\r\n        this.cartItems = JSON.parse(savedCart);\r\n      }\r\n    }\r\n  }\r\n\r\n  getCartItems() {\r\n    return this.cartItems;\r\n  }\r\n\r\n  addToCart(item: any) {\r\n    const existingItem = this.cartItems.find(cartItem => cartItem.productName === item.productName);\r\n    if (existingItem) {\r\n      existingItem.quantity += 1;\r\n    } else {\r\n      this.cartItems.push({ ...item, quantity: 1 });\r\n    }\r\n    this.saveCart();\r\n  }\r\n\r\n  removeFromCart(index: number) {\r\n    this.cartItems.splice(index, 1);\r\n    this.saveCart();\r\n  }\r\n\r\n  clearCart() {\r\n    this.cartItems = [];\r\n    this.saveCart();\r\n  }\r\n\r\n  saveCart() {\r\n    if (typeof window !== 'undefined' && window.localStorage) {\r\n      localStorage.setItem('cartItems', JSON.stringify(this.cartItems));\r\n    }\r\n  }\r\n \r\n}\r\n", "import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Product } from '../../models/Product';\r\nimport { ProduseService } from './produse.service';\r\n\r\nimport { RouterLink, RouterOutlet } from '@angular/router';\r\nimport { CartService } from '../cart/cart.service';\r\n\r\n@Component({\r\n  selector: 'app-produse',\r\n  standalone: true,\r\n  imports: [CommonModule, RouterOutlet, RouterLink],\r\n  templateUrl: './produse.component.html',\r\n  styleUrls: ['./produse.component.scss']\r\n})\r\nexport class ProduseComponent implements OnInit {\r\n  Products: Product[] = [];\r\n\r\n  constructor(\r\n    private produseService: ProduseService,\r\n    private cartService: CartService // Injectează serviciul CartService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    const startTime = performance.now();\r\n    this.produseService.getServices().subscribe(\r\n      (data: any) => {\r\n        this.Products.push(...data);\r\n      },\r\n      (error) => {\r\n        console.error('Error fetching products:', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  addToCart(product: Product) {\r\n    // Folosește serviciul CartService pentru a adăuga produsul în coș\r\n    this.cartService.addToCart(product);\r\n    console.log('Produsul a fost adăugat în coș:', product);\r\n    console.log(this.cartService.getCartItems())\r\n  }\r\n}\r\n", "<div class=\"product-container\">\r\n  <div *ngFor=\"let product of Products\" class=\"product-card\">\r\n    <img [src]=\"product.image\" class=\"product-img\" alt=\"{{ product.productName }}\">\r\n    <div class=\"product-details\">\r\n      <h3>{{ product.productName }}</h3>\r\n      <p class=\"price\">${{ product.price }}</p>\r\n      <p class=\"description\">{{ product.description }}</p>\r\n      <!-- Butonul de adăugare în coș -->\r\n      <button class=\"add-to-cart-btn\" (click)=\"addToCart(product)\">Add to Cart!</button>\r\n    </div>\r\n  </div>\r\n</div>", "import { Component, OnInit } from '@angular/core';\r\nimport { CartService } from './cart.service';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Router } from '@angular/router'; // Import Router\r\n@Component({\r\n  selector: 'app-cart',\r\n  imports:[CommonModule],\r\n  standalone:true,\r\n  templateUrl: './cart.component.html',\r\n  styleUrls: ['./cart.component.scss']\r\n})\r\nexport class CartComponent implements OnInit {\r\n  cartItems: any[] = [];\r\n\r\n  constructor(private cartService: CartService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.cartItems = this.cartService.getCartItems();\r\n  }\r\n\r\n  removeFromCart(index: number): void {\r\n    this.cartService.removeFromCart(index);\r\n    this.cartItems = this.cartService.getCartItems();\r\n  }\r\n\r\n  clearCart(): void {\r\n    this.cartService.clearCart();\r\n    this.cartItems = this.cartService.getCartItems();\r\n  }\r\n\r\n  getTotal(): string {\r\n    const total = this.cartItems.reduce((total, item) => total + (item.price * item.quantity), 0);\r\n    return total.toFixed(2);\r\n  }\r\n\r\n  // Crește cantitatea produsului\r\n  increaseQuantity(index: number): void {\r\n    this.cartItems[index].quantity += 1;\r\n  }\r\n\r\n  // Scade cantitatea produsului\r\n  decreaseQuantity(index: number): void {\r\n    if (this.cartItems[index].quantity > 1) {\r\n      this.cartItems[index].quantity -= 1;\r\n    }\r\n  }\r\n  onCheckout(): void {\r\n    // Optional: Add logic to handle order placement here (e.g., save order to the server)\r\n    // After handling checkout, navigate to the Thank You page\r\n    this.cartService.clearCart(); // Această metodă se ocupă și de Local Storage\r\n    this.router.navigate(['/thankyou']);\r\n  }\r\n}\r\n", "<div class=\"cart-container\">\r\n    <h2>Your Shopping Cart</h2>\r\n  \r\n    <div *ngIf=\"cartItems.length === 0\" class=\"empty-cart-message\">\r\n      <p>Your cart is empty!</p>\r\n    </div>\r\n  \r\n    <div *ngFor=\"let item of cartItems; let i = index\" class=\"cart-item\">\r\n      <img [src]=\"item.image\" class=\"cart-item-image\" alt=\"{{ item.productName }}\">\r\n      <div class=\"cart-item-details\">\r\n        <h3>{{ item.productName }}</h3>\r\n        <p class=\"price\">${{ item.price }}</p>\r\n  \r\n        <div class=\"quantity-container\">\r\n          <button (click)=\"decreaseQuantity(i)\" [disabled]=\"item.quantity <= 1\">-</button>\r\n          <span class=\"quantity\">Quantity: {{ item.quantity }}</span>\r\n          <button (click)=\"increaseQuantity(i)\">+</button>\r\n        </div>\r\n  \r\n        <button class=\"remove-btn\" (click)=\"removeFromCart(i)\">Remove</button>\r\n      </div>\r\n    </div>\r\n  \r\n    <div *ngIf=\"cartItems.length > 0\" class=\"cart-summary\">\r\n      <p>Total: ${{ getTotal() }}</p>\r\n      <div class=\"cart-actions\">\r\n        <button class=\"clear-cart-btn\" (click)=\"clearCart()\">Clear Cart</button>\r\n        <button class=\"checkout-btn\" (click)=\"onCheckout()\">Proceed to Checkout</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  ", "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-thank-you',\r\n  standalone: true,\r\n  imports: [],\r\n  templateUrl: './thank-you.component.html',\r\n  styleUrl: './thank-you.component.scss'\r\n})\r\nexport class ThankYouComponent {\r\n\r\n}\r\n", "<div class=\"thank-you-container\">\r\n    <h2>Thank You for Your Purchase!</h2>\r\n  \r\n    <div class=\"thank-you-message\">\r\n      <p>Your order has been successfully processed. We appreciate your business!</p>\r\n      <p>You will receive a confirmation email shortly with your order details.</p>\r\n    </div>", "import { Routes } from '@angular/router';\r\nimport { TemplateComponent } from '../components/template/template.component';\r\nimport { HomepageComponent } from '../components/homepage/homepage.component';\r\nimport { NavbarComponent } from '../components/navbar/navbar.component';\r\nimport { ErrorPageComponent } from '../components/error-page/error-page.component';\r\nimport { ContactPageComponent } from '../components/contact-page/contact-page.component';\r\nimport { ProduseComponent } from '../components/produse/produse.component';\r\nimport { CartComponent } from '../components/cart/cart.component';\r\nimport { ThankYouComponent } from '../components/thank-you/thank-you.component';\r\n\r\n\r\nexport const routes: Routes = [\r\n    {path:'template',component:TemplateComponent},\r\n    {path:'navbar',component:NavbarComponent},\r\n    {path:'contact',component:ContactPageComponent},\r\n    {path:'',component:HomepageComponent},\r\n    {path:'products',component:ProduseComponent},\r\n    {path:'cart',component:CartComponent},\r\n    {path:'thankyou',component:ThankYouComponent},\r\n    {path:'**',component:ErrorPageComponent},\r\n    \r\n\r\n];\r\n", "import { ApplicationConfig } from '@angular/core';\r\nimport { provideRouter } from '@angular/router';\r\nimport { HttpClientModule, provideHttpClient, withFetch } from '@angular/common/http';\r\nimport { routes } from './app.routes';\r\nimport { provideClientHydration } from '@angular/platform-browser';\r\nimport { importProvidersFrom } from '@angular/core';\r\nexport const appConfig: ApplicationConfig = {\r\n  providers: [provideRouter(routes),\r\n    provideClientHydration(),\r\n    importProvidersFrom(HttpClientModule),\r\n    provideHttpClient(withFetch()) ]// Adăugăm activarea fetch pentru HttpClient]\r\n};\r\n", "import { mergeApplicationConfig, ApplicationConfig } from '@angular/core';\r\nimport { provideServerRendering } from '@angular/platform-server';\r\nimport { appConfig } from './app.config';\r\n\r\nconst serverConfig: ApplicationConfig = {\r\n  providers: [\r\n    provideServerRendering()\r\n  ]\r\n};\r\n\r\nexport const config = mergeApplicationConfig(appConfig, serverConfig);\r\n", "import { bootstrapApplication } from '@angular/platform-browser';\r\nimport { AppComponent } from './app/app.component';\r\nimport { config } from './app/app.config.server';\r\n\r\nconst bootstrap = () => bootstrapApplication(AppComponent, config);\r\n\r\nexport default bootstrap;\r\n"],
  "mappings": "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",
  "names": ["total"]
}
